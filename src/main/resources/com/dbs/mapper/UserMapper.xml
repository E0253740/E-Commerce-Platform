<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace用于指定当前的映射文件和哪个接口进行映射,需要指定接口的文件路径,路径需要是包的完整路径结构-->
<mapper namespace="com.dbs.mapper.UserMapper">

    <!--id 表示映射接口中方法名称，直接在标签内部编写SQL语句-->
    <!--
        useGeneratedKeys属性: 开启某个字段的值递增(主键设置为递增)
        keyProperty: 表示将表中的哪个字段作为主键递增
    -->
    <insert id="insert" useGeneratedKeys="true" keyProperty="uid">
        INSERT INTO t_user (
            username,password,salt,phone,email,gender,avatar,is_delete,created_user,
            created_time,modified_user,modified_time
        ) VALUES (#{username}, #{password}, #{salt}, #{phone}, #{email}, #{gender}, #{avatar}, #{isDelete}, #{createdUser},
                  #{createdTime}, #{modifiedUser}, #{modifiedTime}
        )
    </insert>

    <!--
        resultType: 需要实体类所有名字和表里的列名相同
        resultMap:  当表的字段和类的对象属性字段名称不一致时，自定义查询结果集的映射规则
    -->

    <!--自定义resultMap, 来完成映射规则-->
    <resultMap id="UserEntityMap" type="com.dbs.entity.User">
        <!--将表的字段和类的属性不一致的字段进行匹配，名称一致的可以省略不写-->
        <!--
            column: 表中的资源名称
            property: 类中的资源名称
        -->
        <!--主键不可以省略-->
        <id column="uid" property="uid"></id>
        <result column="is_delete" property="isDelete"></result>
        <result column="created_user" property="createdUser"></result>
        <result column="created_time" property="createdTime"></result>
        <result column="modified_user" property="modifiedUser"></result>
        <result column="modified_time" property="modifiedTime"></result>
    </resultMap>
    <select id="findByUsername" resultMap="UserEntityMap">
        SELECT * from t_user WHERE username=#{username}
    </select>
    
    
    <update id="updatePasswordByUid">
        update t_user set password=#{password}, modified_user=#{modifiedUser}, modified_time=#{modifiedTime} where uid=#{uid}
    </update>
    
    <select id="findByUid" resultMap="UserEntityMap">
        select * from t_user where uid=#{uid}
    </select>
    
    <update id="updateInfoByUid">
        UPDATE t_user set
        <if test="phone!=null">phone=#{phone},</if>
        <if test="email!=null">email=#{email},</if>
        <if test="gender!=null">gender=#{gender},</if>
                          modified_user=#{modifiedUser},
                          modified_time=#{modifiedTime} where uid=#{uid}
    </update>

    <update id="updateAvatarByUid">
        UPDATE t_user set avatar=#{avatar}, modified_user=#{modifiedUser}, modified_time=#{modifiedTime} WHERE uid=#{uid}
    </update>
</mapper>